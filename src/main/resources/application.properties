spring.application.name=azure-devops-ddd-example
# DB H2
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.h2.console.enabled=true
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# DB SQL Server
#spring.datasource.url=jdbc:sqlserver://xxx-mssql.database.windows.net:1433;database=my-mssqlxx;user=myadmin@xxx-mssql;password=xxx;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;
#spring.datasource.username=your-username
#spring.datasource.password=your-password
#spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.jpa.database-platform=org.hibernate.dialect.SQLServerDialect

# in case of using Flyway, you need to disable DDL auto-generation, other cases using "update" instead of "none"
spring.jpa.hibernate.ddl-auto=none 
#spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true

#Flyway config
spring.flyway.baseline-description=Initial migration
spring.flyway.baseline-version=0
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.table=flyway_schema_history
spring.flyway.enabled=true

# connection pool
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=30000

server.port=8080

# Info
info.app.encoding=@project.build.sourceEncoding@
info.app.java.source=@java.version@
info.app.java.target=@java.version@
management.info.git.mode=full
management.info.git.enabled=true

# Open API
springdoc.open-api.info.title=@project.artifactId@
springdoc.open-api.info.version=@project.version@
springdoc.open-api.info.description=@project.description@
springdoc.open-api.info.contact.name=Gang
springdoc.open-api.info.contact.email=xx@abc.com

# Actuator
management.server.port=8081
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
#enable k8s health check, http://host:8081/actuator/health/
management.endpoint.health.probes.enabled=true
#if enabled, can access via http://host:8080/readyz
management.endpoint.health.probes.add-additional-paths=false 

# rest client
rest.client.base-url=https://httpbin.org
rest.client.connection-timeout=5000
rest.client.read-timeout=5000

# redis
spring.data.redis.host=gangredis.redis.cache.windows.net
spring.data.redis.password=<PASSWORD>
spring.data.redis.port=6380
spring.data.redis.ssl.enabled=true
# if you're not running in SSL mode
#spring.data.redis.port=6379
#spring.data.redis.ssl.enabled=false
spring.data.redis.client-type=lettuce
# Redis connection timeout in milliseconds (default is 60000 ms = 1 minute)
spring.data.redis.timeout=60000
# Lettuce connection pool settings
# Maximum number of connections (default is 8)
spring.data.redis.lettuce.pool.max-active=8
# Maximum number of "idle" connections (default is 8)
spring.data.redis.lettuce.pool.max-idle=8
# Minimum number of "idle" connections (default is 0)
spring.data.redis.lettuce.pool.min-idle=0
#disable Redis
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
# disable Redisson
spring.autoconfigure.exclude=org.redisson.spring.starter.RedissonAutoConfigurationV2

# SSL client
# myhttpshost will be used in RestClient.builder().apply(RestClientSsl.fromBundle("myhttpshost")).build()
# cert.crt is from springboot-https-server, more config details in PemSslBundleProperties.java and JksSslBundleProperties.java
spring.ssl.bundle.pem.myhttpshost.truststore.certificate=classpath:cert.crt
